{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is the official Jobs Creator documentation Official FiveM post Tebex page","title":"Home"},{"location":"disable_salary_offduty/","text":"How to disable salary when player is off-duty The reason why after you go off-duty, you still receive salary, it's because es_extended handles the players salary To disable players salary when they are off-duty, you have to integrate Jobs Creator event with es_extended. To do it, you have to edit the code in es_extended/server/paycheck.lua and to replace with the snippet below: New code (should replace all the old code of paycheck.lua) ESX . StartPayCheck = function () function payCheck () local xPlayers = ESX . GetPlayers () for i = 1 , # xPlayers , 1 do local xPlayer = ESX . GetPlayerFromId ( xPlayers [ i ]) local job = xPlayer . job . grade_name local salary = xPlayer . job . grade_salary if salary > 0 and exports [ \"jobs_creator\" ]: isPlayerOnDuty ( xPlayer . source ) then if job == 'unemployed' then -- unemployed xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_help' , salary ), 'CHAR_BANK_MAZE' , 9 ) elseif Config . EnableSocietyPayouts then -- possibly a society TriggerEvent ( 'esx_society:getSociety' , xPlayer . job . name , function ( society ) if society ~= nil then -- verified society TriggerEvent ( 'esx_addonaccount:getSharedAccount' , society . account , function ( account ) if account . money >= salary then -- does the society money to pay its employees? xPlayer . addAccountMoney ( 'bank' , salary ) account . removeMoney ( salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) else TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), '' , _U ( 'company_nomoney' ), 'CHAR_BANK_MAZE' , 1 ) end end ) else -- not a society xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) end end ) else -- generic job xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) end end end SetTimeout ( Config . PaycheckInterval , payCheck ) end SetTimeout ( Config . PaycheckInterval , payCheck ) end I have an error / the code doesn't work The snippet doesn't work on all ESX version, this won't be an issue because the only code you need to add, it's and exports [ \"jobs_creator\" ]: isPlayerOnDuty ( xPlayer . source ) An example: Before After","title":"How to disable salary when player is off-duty"},{"location":"disable_salary_offduty/#how-to-disable-salary-when-player-is-off-duty","text":"The reason why after you go off-duty, you still receive salary, it's because es_extended handles the players salary To disable players salary when they are off-duty, you have to integrate Jobs Creator event with es_extended. To do it, you have to edit the code in es_extended/server/paycheck.lua and to replace with the snippet below:","title":"How to disable salary when player is off-duty"},{"location":"disable_salary_offduty/#new-code-should-replace-all-the-old-code-of-paychecklua","text":"ESX . StartPayCheck = function () function payCheck () local xPlayers = ESX . GetPlayers () for i = 1 , # xPlayers , 1 do local xPlayer = ESX . GetPlayerFromId ( xPlayers [ i ]) local job = xPlayer . job . grade_name local salary = xPlayer . job . grade_salary if salary > 0 and exports [ \"jobs_creator\" ]: isPlayerOnDuty ( xPlayer . source ) then if job == 'unemployed' then -- unemployed xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_help' , salary ), 'CHAR_BANK_MAZE' , 9 ) elseif Config . EnableSocietyPayouts then -- possibly a society TriggerEvent ( 'esx_society:getSociety' , xPlayer . job . name , function ( society ) if society ~= nil then -- verified society TriggerEvent ( 'esx_addonaccount:getSharedAccount' , society . account , function ( account ) if account . money >= salary then -- does the society money to pay its employees? xPlayer . addAccountMoney ( 'bank' , salary ) account . removeMoney ( salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) else TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), '' , _U ( 'company_nomoney' ), 'CHAR_BANK_MAZE' , 1 ) end end ) else -- not a society xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) end end ) else -- generic job xPlayer . addAccountMoney ( 'bank' , salary ) TriggerClientEvent ( 'esx:showAdvancedNotification' , xPlayer . source , _U ( 'bank' ), _U ( 'received_paycheck' ), _U ( 'received_salary' , salary ), 'CHAR_BANK_MAZE' , 9 ) end end end SetTimeout ( Config . PaycheckInterval , payCheck ) end SetTimeout ( Config . PaycheckInterval , payCheck ) end","title":"New code (should replace all the old code of paycheck.lua)"},{"location":"disable_salary_offduty/#i-have-an-error-the-code-doesnt-work","text":"The snippet doesn't work on all ESX version, this won't be an issue because the only code you need to add, it's and exports [ \"jobs_creator\" ]: isPlayerOnDuty ( xPlayer . source ) An example: Before After","title":"I have an error / the code doesn't work"},{"location":"empty_server_callbacks/","text":"ESX.ServerCallbacks table is empty If you get the error ESX.ServerCallbacks table is empty , it means that in your es_extended is not using the ESX.ServerCallbacks table. It's probable that the table for the callbacks is Core.ServerCallbacks Fix If your es_extended is using Core.ServerCallbacks , you can fix the problem by adding the following line in es_extended\\server\\common.lua ESX . ServerCallbacks = Core . ServerCallbacks As in the screenshot","title":"ESX.ServerCallbacks table is empty"},{"location":"empty_server_callbacks/#esxservercallbacks-table-is-empty","text":"If you get the error ESX.ServerCallbacks table is empty , it means that in your es_extended is not using the ESX.ServerCallbacks table. It's probable that the table for the callbacks is Core.ServerCallbacks","title":"ESX.ServerCallbacks table is empty"},{"location":"empty_server_callbacks/#fix","text":"If your es_extended is using Core.ServerCallbacks , you can fix the problem by adding the following line in es_extended\\server\\common.lua ESX . ServerCallbacks = Core . ServerCallbacks As in the screenshot","title":"Fix"},{"location":"external_events_names/","text":"Replacing default events names In case your server uses different event names than the default ones, you can edit those names in jobs_creator/integrations/cl_integrations.lua and jobs_creator/integrations/sv_integrations.lua Example of default ones: EXTERNAL_EVENTS_NAMES = { [ \"esx:getSharedObject\" ] = nil , [ \"esx_skin:save\" ] = \"esx_skin:save\" , [ \"esx_billing:sendBill\" ] = \"esx_billing:sendBill\" , [ \"jsfour-idcard:open\" ] = \"jsfour-idcard:open\" , [ \"esx_license:removeLicense\" ] = \"esx_license:removeLicense\" , [ \"esx_license:addLicense\" ] = \"esx_license:addLicense\" , } Example of edited ones: EXTERNAL_EVENTS_NAMES = { [ \"esx:getSharedObject\" ] = \"gamemode:getSharedObject\" , [ \"esx_skin:save\" ] = \"my_skin_script:save\" , [ \"esx_billing:sendBill\" ] = \"billing_ui:sendBill\" , [ \"jsfour-idcard:open\" ] = \"jsfour-idcard:open\" , [ \"esx_license:removeLicense\" ] = \"licenses:removeLicense\" , [ \"esx_license:addLicense\" ] = \"licenses:addLicense\" , }","title":"Replacing default events names"},{"location":"external_events_names/#replacing-default-events-names","text":"In case your server uses different event names than the default ones, you can edit those names in jobs_creator/integrations/cl_integrations.lua and jobs_creator/integrations/sv_integrations.lua Example of default ones: EXTERNAL_EVENTS_NAMES = { [ \"esx:getSharedObject\" ] = nil , [ \"esx_skin:save\" ] = \"esx_skin:save\" , [ \"esx_billing:sendBill\" ] = \"esx_billing:sendBill\" , [ \"jsfour-idcard:open\" ] = \"jsfour-idcard:open\" , [ \"esx_license:removeLicense\" ] = \"esx_license:removeLicense\" , [ \"esx_license:addLicense\" ] = \"esx_license:addLicense\" , } Example of edited ones: EXTERNAL_EVENTS_NAMES = { [ \"esx:getSharedObject\" ] = \"gamemode:getSharedObject\" , [ \"esx_skin:save\" ] = \"my_skin_script:save\" , [ \"esx_billing:sendBill\" ] = \"billing_ui:sendBill\" , [ \"jsfour-idcard:open\" ] = \"jsfour-idcard:open\" , [ \"esx_license:removeLicense\" ] = \"licenses:removeLicense\" , [ \"esx_license:addLicense\" ] = \"licenses:addLicense\" , }","title":"Replacing default events names"},{"location":"external_scripts_names/","text":"Replacing default scripts names In case your server uses different script names than the default ones, you can edit those names in jobs_creator/integrations/sh_integrations.lua Example of default ones EXTERNAL_SCRIPTS_NAMES = { [ \"es_extended\" ] = \"es_extended\" , [ \"esx_addonaccount\" ] = \"esx_addonaccount\" } Example of edited ones EXTERNAL_SCRIPTS_NAMES = { [ \"es_extended\" ] = \"mygamemode_extended\" , [ \"esx_addonaccount\" ] = \"mygamemode_addonaccount\" }","title":"Replacing default scripts names"},{"location":"external_scripts_names/#replacing-default-scripts-names","text":"In case your server uses different script names than the default ones, you can edit those names in jobs_creator/integrations/sh_integrations.lua Example of default ones EXTERNAL_SCRIPTS_NAMES = { [ \"es_extended\" ] = \"es_extended\" , [ \"esx_addonaccount\" ] = \"esx_addonaccount\" } Example of edited ones EXTERNAL_SCRIPTS_NAMES = { [ \"es_extended\" ] = \"mygamemode_extended\" , [ \"esx_addonaccount\" ] = \"mygamemode_addonaccount\" }","title":"Replacing default scripts names"},{"location":"fix_server_crash/","text":"Fix server crash on script start If your server crashes when starting the script, it means you are using an old version of mysql-async script Fixing this issue, is very simple and fast, you only have to install this script instead of your current mysql-async , be sure to rename the script folder to mysql-async","title":"Fix server crash on script start"},{"location":"fix_server_crash/#fix-server-crash-on-script-start","text":"If your server crashes when starting the script, it means you are using an old version of mysql-async script Fixing this issue, is very simple and fast, you only have to install this script instead of your current mysql-async , be sure to rename the script folder to mysql-async","title":"Fix server crash on script start"},{"location":"manually_set_esx_shared_object/","text":"Manually set ESX shared object On ESX, it may happen for many reason that you encounter the following error error (in F8 console or in server console) This usually happens because the script cannot find the ESX shared object of your es_extended script automatically To solve the issue, you have to find the shared object name of your es_extended script in the file es_extended/client/common.lua This is an example of what you can find (you may have something else) After you found your ESX shared object name, you can manually set it in the files integrations/sv_integrations.lua and integrations/cl_integrations.lua , replacing the nil with the name of your shared object (between double quotes) Do not replace the left side, only replace the right side An example:","title":"Manually set ESX shared object"},{"location":"manually_set_esx_shared_object/#manually-set-esx-shared-object","text":"On ESX, it may happen for many reason that you encounter the following error error (in F8 console or in server console) This usually happens because the script cannot find the ESX shared object of your es_extended script automatically To solve the issue, you have to find the shared object name of your es_extended script in the file es_extended/client/common.lua This is an example of what you can find (you may have something else) After you found your ESX shared object name, you can manually set it in the files integrations/sv_integrations.lua and integrations/cl_integrations.lua , replacing the nil with the name of your shared object (between double quotes) Do not replace the left side, only replace the right side An example:","title":"Manually set ESX shared object"},{"location":"qb_core_installation/","text":"QB-Core installation tutorial The installation for QB-Core it's a bit longer than the ESX one where it's almost all automated Adding the items To add the new items, you have to edit qb-core/shared/items.lua file and add at the bottom of the table the following code [ 'fixkit' ] = {[ 'name' ] = 'fixkit' , [ 'label' ] = 'Fixkit' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'medikit' ] = {[ 'name' ] = 'medikit' , [ 'label' ] = 'Medikit' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'sponge' ] = {[ 'name' ] = 'sponge' , [ 'label' ] = 'Sponge' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'handcuffs' ] = {[ 'name' ] = 'handcuffs' , [ 'label' ] = 'Handcuffs' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'lockpick' ] = {[ 'name' ] = 'lockpick' , [ 'label' ] = 'Lockpick' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'bandage' ] = {[ 'name' ] = 'bandage' , [ 'label' ] = 'Bandage' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, Screenshot example: Installing ESX menu To make the script works, you need to install ESX menu This esx_menu_default script is edited by the creator of QB-Core framework, you can find it in QBCore Discord server in conversion channel, or directly from this link","title":"QB-Core installation tutorial"},{"location":"qb_core_installation/#qb-core-installation-tutorial","text":"The installation for QB-Core it's a bit longer than the ESX one where it's almost all automated","title":"QB-Core installation tutorial"},{"location":"qb_core_installation/#adding-the-items","text":"To add the new items, you have to edit qb-core/shared/items.lua file and add at the bottom of the table the following code [ 'fixkit' ] = {[ 'name' ] = 'fixkit' , [ 'label' ] = 'Fixkit' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'medikit' ] = {[ 'name' ] = 'medikit' , [ 'label' ] = 'Medikit' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'sponge' ] = {[ 'name' ] = 'sponge' , [ 'label' ] = 'Sponge' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'handcuffs' ] = {[ 'name' ] = 'handcuffs' , [ 'label' ] = 'Handcuffs' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'lockpick' ] = {[ 'name' ] = 'lockpick' , [ 'label' ] = 'Lockpick' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil }, [ 'bandage' ] = {[ 'name' ] = 'bandage' , [ 'label' ] = 'Bandage' , [ 'weight' ] = 500 , [ 'type' ] = 'item' , [ 'image' ] = 'your_image.png' , [ 'unique' ] = false , [ 'useable' ] = false , [ 'shouldClose' ] = false , [ 'combinable' ] = nil },","title":"Adding the items"},{"location":"qb_core_installation/#screenshot-example","text":"","title":"Screenshot example:"},{"location":"qb_core_installation/#installing-esx-menu","text":"To make the script works, you need to install ESX menu This esx_menu_default script is edited by the creator of QB-Core framework, you can find it in QBCore Discord server in conversion channel, or directly from this link","title":"Installing ESX menu"},{"location":"updating_the_script_from_old_versions/","text":"This section will explain how to update the script from old versions You'll have to follow all steps from your current version to the newer one A backup is always suggested before doing these steps 3.5 Update - to do if your version is older than 3.5 Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateRecipes' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"crafting_table\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id if ( result . data ) then local data = json . decode ( result . data ) local newData = {} local anythingChanged = false if ( data . craftablesItems ) then for itemName , craftingData in pairs ( data . craftablesItems ) do if ( not craftingData . recipes ) then anythingChanged = true end newData [ itemName ] = { recipes = craftingData , animations = {} } end end local markerData = { craftablesItems = newData } if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( markerData ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end end ) end end ) 3.8 Update - to do if your version is older than 3.8 Run this query in the database to convert old job shop items ALTER TABLE job_shop ADD COLUMN IF NOT EXISTS `item_type` VARCHAR ( 50 ) NOT NULL AFTER item_name ; UPDATE job_shop SET item_type = \"item_standard\" ; 3.11 Update - to do if your version is older than 3.11 Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemQuantity ) then data . itemMinQuantity = data . itemQuantity data . itemMaxQuantity = data . itemQuantity data . itemQuantity = nil anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end ) 3.14 Update - to do if your version is older than 3.14 Run this query in the database to convert old database tables and to create the new one CREATE TABLE IF NOT EXISTS `jobs_wardrobes` ( `id` INT ( 11 ) NOT NULL AUTO_INCREMENT , `identifier` VARCHAR ( 100 ) NOT NULL COLLATE 'utf8mb4_general_ci' , `label` VARCHAR ( 50 ) NOT NULL COLLATE 'utf8mb4_general_ci' , `outfit` LONGTEXT NOT NULL DEFAULT '' COLLATE 'utf8mb4_bin' , PRIMARY KEY ( `id` ) USING BTREE , INDEX `identifier` ( `identifier` ) USING BTREE ); RENAME TABLE job_armory TO jobs_armories , job_garage TO jobs_garages , job_shop TO jobs_shops ; 3.16 Update - to do if your version is older than 3.16 Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateShops' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"shop\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data and data . itemsOnSale ) then for itemName , itemData in pairs ( data . itemsOnSale ) do if ( type ( itemData ) == \"number\" ) then data . itemsOnSale [ itemName ] = { price = itemData } anythingChanged = true end end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end ) 3.18 Update - to do if your version is older than 3.18 Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest2' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemName or data . itemMinQuantity or data . itemMaxQuantity ) then data . harvestableItems = { { name = data . itemName , minQuantity = data . itemMinQuantity , maxQuantity = data . itemMaxQuantity , time = data . itemTime , chances = 100 } } data . itemMinQuantity = nil data . itemMaxQuantity = nil data . itemTime = nil data . itemName = nil anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end ) 4.0 Update - to do if your version is older than 4.0 After running the server and the script is started , run this query in the database UPDATE jobs_data SET grades_type = \"minimumGrade\" WHERE grades_type IS NULL ; Add the following code in jobs_creator/integrations/sv_integrations.lua and use both commands in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest3' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemTool and not data . itemToolLoseProbability ) then data . itemToolLoseProbability = 100 anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end ) RegisterCommand ( 'updateMarkets' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"market\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data and data . items ) then for itemName , itemData in pairs ( data . items ) do if ( itemData . price ) then itemData . maxPrice = itemData . price itemData . minPrice = itemData . price itemData . price = nil anythingChanged = true end end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end )","title":"Updating the script from old versions"},{"location":"updating_the_script_from_old_versions/#35-update-to-do-if-your-version-is-older-than-35","text":"Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateRecipes' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"crafting_table\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id if ( result . data ) then local data = json . decode ( result . data ) local newData = {} local anythingChanged = false if ( data . craftablesItems ) then for itemName , craftingData in pairs ( data . craftablesItems ) do if ( not craftingData . recipes ) then anythingChanged = true end newData [ itemName ] = { recipes = craftingData , animations = {} } end end local markerData = { craftablesItems = newData } if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( markerData ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end end ) end end )","title":"3.5 Update - to do if your version is older than 3.5"},{"location":"updating_the_script_from_old_versions/#38-update-to-do-if-your-version-is-older-than-38","text":"Run this query in the database to convert old job shop items ALTER TABLE job_shop ADD COLUMN IF NOT EXISTS `item_type` VARCHAR ( 50 ) NOT NULL AFTER item_name ; UPDATE job_shop SET item_type = \"item_standard\" ;","title":"3.8 Update - to do if your version is older than 3.8"},{"location":"updating_the_script_from_old_versions/#311-update-to-do-if-your-version-is-older-than-311","text":"Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemQuantity ) then data . itemMinQuantity = data . itemQuantity data . itemMaxQuantity = data . itemQuantity data . itemQuantity = nil anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end )","title":"3.11 Update - to do if your version is older than 3.11"},{"location":"updating_the_script_from_old_versions/#314-update-to-do-if-your-version-is-older-than-314","text":"Run this query in the database to convert old database tables and to create the new one CREATE TABLE IF NOT EXISTS `jobs_wardrobes` ( `id` INT ( 11 ) NOT NULL AUTO_INCREMENT , `identifier` VARCHAR ( 100 ) NOT NULL COLLATE 'utf8mb4_general_ci' , `label` VARCHAR ( 50 ) NOT NULL COLLATE 'utf8mb4_general_ci' , `outfit` LONGTEXT NOT NULL DEFAULT '' COLLATE 'utf8mb4_bin' , PRIMARY KEY ( `id` ) USING BTREE , INDEX `identifier` ( `identifier` ) USING BTREE ); RENAME TABLE job_armory TO jobs_armories , job_garage TO jobs_garages , job_shop TO jobs_shops ;","title":"3.14 Update - to do if your version is older than 3.14"},{"location":"updating_the_script_from_old_versions/#316-update-to-do-if-your-version-is-older-than-316","text":"Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateShops' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"shop\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data and data . itemsOnSale ) then for itemName , itemData in pairs ( data . itemsOnSale ) do if ( type ( itemData ) == \"number\" ) then data . itemsOnSale [ itemName ] = { price = itemData } anythingChanged = true end end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end )","title":"3.16 Update - to do if your version is older than 3.16"},{"location":"updating_the_script_from_old_versions/#318-update-to-do-if-your-version-is-older-than-318","text":"Add the following code in jobs_creator/integrations/sv_integrations.lua and use the command in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest2' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemName or data . itemMinQuantity or data . itemMaxQuantity ) then data . harvestableItems = { { name = data . itemName , minQuantity = data . itemMinQuantity , maxQuantity = data . itemMaxQuantity , time = data . itemTime , chances = 100 } } data . itemMinQuantity = nil data . itemMaxQuantity = nil data . itemTime = nil data . itemName = nil anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end )","title":"3.18 Update - to do if your version is older than 3.18"},{"location":"updating_the_script_from_old_versions/#40-update-to-do-if-your-version-is-older-than-40","text":"After running the server and the script is started , run this query in the database UPDATE jobs_data SET grades_type = \"minimumGrade\" WHERE grades_type IS NULL ; Add the following code in jobs_creator/integrations/sv_integrations.lua and use both commands in the server console or in game (there will be an output when you use the command) RegisterCommand ( 'updateHarvest3' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"harvest\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data ) then if ( data . itemTool and not data . itemToolLoseProbability ) then data . itemToolLoseProbability = 100 anythingChanged = true end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end ) RegisterCommand ( 'updateMarkets' , function ( playerId ) if ( playerId == 0 or isAllowed ( playerId )) then MySQL . Async . fetchAll ( 'SELECT id, data FROM jobs_data WHERE type=\"market\"' , {}, function ( results ) for k , result in pairs ( results ) do local markerId = result . id local data = json . decode ( result . data ) local anythingChanged = false if ( data and data . items ) then for itemName , itemData in pairs ( data . items ) do if ( itemData . price ) then itemData . maxPrice = itemData . price itemData . minPrice = itemData . price itemData . price = nil anythingChanged = true end end end if ( anythingChanged ) then print ( \"Updating marker ID: \" .. markerId ) MySQL . Async . execute ( \"UPDATE jobs_data SET data=@newData WHERE id=@markerId\" , { [ '@newData' ] = json . encode ( data ), [ '@markerId' ] = markerId }) else print ( \"Marker ID \" .. markerId .. \" doesn't need to update\" ) end end end ) end end )","title":"4.0 Update - to do if your version is older than 4.0"},{"location":"client/actions/getAllowedActions/","text":"Get player allowed actions To retrieve allowed actions from player's job Export exports [ \"jobs_creator\" ]: getAllowedActions () Return value Name Data Type Description actions table Key value table where key is the action and value it's boolean if it's allowed or not Example local actions = exports [ \"jobs_creator\" ]: getAllowedActions () print ( ESX . DumpTable ( actions )) --[[ Example output { [\"canHeal\"] = false, [\"canCheckDrivingLicense\"] = false, [\"canCheckWeaponLicense\"] = false, [\"canRevive\"] = false, [\"canCheckIdentity\"] = false, [\"canRepairVehicles\"] = false, [\"canHandcuff\"] = true, [\"enableBilling\"] = true, [\"canLockpickCars\"] = false, [\"canCheckVehicleOwner\"] = false, [\"canWashVehicles\"] = false, } ]]","title":"Get player allowed actions"},{"location":"client/actions/getAllowedActions/#get-player-allowed-actions","text":"To retrieve allowed actions from player's job","title":"Get player allowed actions"},{"location":"client/actions/getAllowedActions/#export","text":"exports [ \"jobs_creator\" ]: getAllowedActions ()","title":"Export"},{"location":"client/actions/getAllowedActions/#return-value","text":"Name Data Type Description actions table Key value table where key is the action and value it's boolean if it's allowed or not","title":"Return value"},{"location":"client/actions/getAllowedActions/#example","text":"local actions = exports [ \"jobs_creator\" ]: getAllowedActions () print ( ESX . DumpTable ( actions )) --[[ Example output { [\"canHeal\"] = false, [\"canCheckDrivingLicense\"] = false, [\"canCheckWeaponLicense\"] = false, [\"canRevive\"] = false, [\"canCheckIdentity\"] = false, [\"canRepairVehicles\"] = false, [\"canHandcuff\"] = true, [\"enableBilling\"] = true, [\"canLockpickCars\"] = false, [\"canCheckVehicleOwner\"] = false, [\"canWashVehicles\"] = false, } ]]","title":"Example"},{"location":"client/actions/isPlayerHandcuffed/","text":"Get if local player is handcuffed Returns if the client/player is handcuffed Export exports [ \"jobs_creator\" ]: isPlayerHandcuffed () Return value Name Data Type Description isHandcuffed boolean true if the player is handcuffed. false if the player is not handcuffed Example if ( not exports [ \"jobs_creator\" ]: isPlayerHandcuffed ()) then print ( \"You are not handcuffed\" ) else print ( \"You are handcuffed\" ) end","title":"Get if local player is handcuffed"},{"location":"client/actions/isPlayerHandcuffed/#get-if-local-player-is-handcuffed","text":"Returns if the client/player is handcuffed","title":"Get if local player is handcuffed"},{"location":"client/actions/isPlayerHandcuffed/#export","text":"exports [ \"jobs_creator\" ]: isPlayerHandcuffed ()","title":"Export"},{"location":"client/actions/isPlayerHandcuffed/#return-value","text":"Name Data Type Description isHandcuffed boolean true if the player is handcuffed. false if the player is not handcuffed","title":"Return value"},{"location":"client/actions/isPlayerHandcuffed/#example","text":"if ( not exports [ \"jobs_creator\" ]: isPlayerHandcuffed ()) then print ( \"You are not handcuffed\" ) else print ( \"You are handcuffed\" ) end","title":"Example"},{"location":"client/actions/openActionsMenu/","text":"Open actions menu Trigger to open the actions menu Event TriggerEvent ( \"jobs_creator:openActionsMenu\" )","title":"Open actions menu"},{"location":"client/actions/openActionsMenu/#open-actions-menu","text":"Trigger to open the actions menu","title":"Open actions menu"},{"location":"client/actions/openActionsMenu/#event","text":"TriggerEvent ( \"jobs_creator:openActionsMenu\" )","title":"Event"},{"location":"client/actions/searchPlayer/","text":"Replace default search action Triggered when searching in a player inventory Event RegisterNetEvent ( \"jobs_creator:actions:search:searchPlayer\" , function ( targetServerId ) end ) Parameters Name Data Type Description targetServerId integer The target player server ID Example RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script search (otherwise there would be 2 searches) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:actions:search:searchPlayer\" ) end ) RegisterNetEvent ( \"jobs_creator:actions:search:searchPlayer\" , function ( targetServerId ) TriggerEvent ( \"external_script:searchInPlayerInventory\" , targetServerId ) end )","title":"Replace default search action"},{"location":"client/actions/searchPlayer/#replace-default-search-action","text":"Triggered when searching in a player inventory","title":"Replace default search action"},{"location":"client/actions/searchPlayer/#event","text":"RegisterNetEvent ( \"jobs_creator:actions:search:searchPlayer\" , function ( targetServerId ) end )","title":"Event"},{"location":"client/actions/searchPlayer/#parameters","text":"Name Data Type Description targetServerId integer The target player server ID","title":"Parameters"},{"location":"client/actions/searchPlayer/#example","text":"RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script search (otherwise there would be 2 searches) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:actions:search:searchPlayer\" ) end ) RegisterNetEvent ( \"jobs_creator:actions:search:searchPlayer\" , function ( targetServerId ) TriggerEvent ( \"external_script:searchInPlayerInventory\" , targetServerId ) end )","title":"Example"},{"location":"client/actions/using_actions_in_radial/","text":"Using the actions in a radial/external menu You can use the actions in any external menu, here there are the triggers you can use from external scripts Check identity -- Trigger to start check identity action TriggerEvent ( \"jobs_creator:actions:checkIdentity\" ) Check vehicle owner -- Trigger to start check vehicle owner action TriggerEvent ( \"jobs_creator:actions:checkVehicleOwner\" ) Create billing -- Trigger to start billing action TriggerEvent ( \"jobs_creator:actions:createBilling\" ) Drag player -- Trigger to start drag action TriggerEvent ( \"jobs_creator:actions:drag\" ) Handcuff player -- Trigger to start handcuff action TriggerEvent ( \"jobs_creator:actions:handcuff\" ) Heal big -- Trigger to start heal big action TriggerEvent ( \"jobs_creator:actions:healBig\" ) Heal small -- Trigger to start heal small action TriggerEvent ( \"jobs_creator:actions:healSmall\" ) Impound -- Trigger to start impound action TriggerEvent ( \"jobs_creator:actions:impoundVehicle\" ) Licenses menu -- Trigger to view licenses menu action TriggerEvent ( \"jobs_creator:actions:licensesMenu\" ) Lockpick car -- Trigger to start lockpick car action TriggerEvent ( \"jobs_creator:actions:lockpickCar\" ) Put in car -- Trigger to start put in car action TriggerEvent ( \"jobs_creator:actions:putInCar\" ) Take from car -- Trigger to start take from car action TriggerEvent ( \"jobs_creator:actions:takeFromCar\" ) Repair vehicle -- Trigger to start repair vehicle action TriggerEvent ( \"jobs_creator:actions:repairVehicle\" ) Revive -- Trigger to start revive action TriggerEvent ( \"jobs_creator:actions:revive\" ) Search -- Trigger to start search action TriggerEvent ( \"jobs_creator:actions:search\" ) Wash vehicle -- Trigger to start wash vehicle action TriggerEvent ( \"jobs_creator:actions:washVehicle\" )","title":"Using the actions in a radial/external menu"},{"location":"client/actions/using_actions_in_radial/#using-the-actions-in-a-radialexternal-menu","text":"You can use the actions in any external menu, here there are the triggers you can use from external scripts","title":"Using the actions in a radial/external menu"},{"location":"client/actions/using_actions_in_radial/#check-identity","text":"-- Trigger to start check identity action TriggerEvent ( \"jobs_creator:actions:checkIdentity\" )","title":"Check identity"},{"location":"client/actions/using_actions_in_radial/#check-vehicle-owner","text":"-- Trigger to start check vehicle owner action TriggerEvent ( \"jobs_creator:actions:checkVehicleOwner\" )","title":"Check vehicle owner"},{"location":"client/actions/using_actions_in_radial/#create-billing","text":"-- Trigger to start billing action TriggerEvent ( \"jobs_creator:actions:createBilling\" )","title":"Create billing"},{"location":"client/actions/using_actions_in_radial/#drag-player","text":"-- Trigger to start drag action TriggerEvent ( \"jobs_creator:actions:drag\" )","title":"Drag player"},{"location":"client/actions/using_actions_in_radial/#handcuff-player","text":"-- Trigger to start handcuff action TriggerEvent ( \"jobs_creator:actions:handcuff\" )","title":"Handcuff player"},{"location":"client/actions/using_actions_in_radial/#heal-big","text":"-- Trigger to start heal big action TriggerEvent ( \"jobs_creator:actions:healBig\" )","title":"Heal big"},{"location":"client/actions/using_actions_in_radial/#heal-small","text":"-- Trigger to start heal small action TriggerEvent ( \"jobs_creator:actions:healSmall\" )","title":"Heal small"},{"location":"client/actions/using_actions_in_radial/#impound","text":"-- Trigger to start impound action TriggerEvent ( \"jobs_creator:actions:impoundVehicle\" )","title":"Impound"},{"location":"client/actions/using_actions_in_radial/#licenses-menu","text":"-- Trigger to view licenses menu action TriggerEvent ( \"jobs_creator:actions:licensesMenu\" )","title":"Licenses menu"},{"location":"client/actions/using_actions_in_radial/#lockpick-car","text":"-- Trigger to start lockpick car action TriggerEvent ( \"jobs_creator:actions:lockpickCar\" )","title":"Lockpick car"},{"location":"client/actions/using_actions_in_radial/#put-in-car","text":"-- Trigger to start put in car action TriggerEvent ( \"jobs_creator:actions:putInCar\" )","title":"Put in car"},{"location":"client/actions/using_actions_in_radial/#take-from-car","text":"-- Trigger to start take from car action TriggerEvent ( \"jobs_creator:actions:takeFromCar\" )","title":"Take from car"},{"location":"client/actions/using_actions_in_radial/#repair-vehicle","text":"-- Trigger to start repair vehicle action TriggerEvent ( \"jobs_creator:actions:repairVehicle\" )","title":"Repair vehicle"},{"location":"client/actions/using_actions_in_radial/#revive","text":"-- Trigger to start revive action TriggerEvent ( \"jobs_creator:actions:revive\" )","title":"Revive"},{"location":"client/actions/using_actions_in_radial/#search","text":"-- Trigger to start search action TriggerEvent ( \"jobs_creator:actions:search\" )","title":"Search"},{"location":"client/actions/using_actions_in_radial/#wash-vehicle","text":"-- Trigger to start wash vehicle action TriggerEvent ( \"jobs_creator:actions:washVehicle\" )","title":"Wash vehicle"},{"location":"client/actions/vehicleImpounded/","text":"Integrate external impound script Triggered when a vehicle is impounded Event AddEventHandler ( \"jobs_creator:actions:vehicleImpounded\" , function ( vehiclePlate , vehicleModel ) end ) Parameters Name Data Type Description vehiclePlate string The vehicle plate vehicleModel string The vehicle model Example RegisterNetEvent ( \"jobs_creator:actions:vehicleImpounded\" , function ( vehiclePlate , vehicleModel ) -- You can add your impound script exports here TriggerServerEvent ( \"impound_script:impoundVehicle\" , vehiclePlate , vehicleModel ) end )","title":"Integrate external impound script"},{"location":"client/actions/vehicleImpounded/#integrate-external-impound-script","text":"Triggered when a vehicle is impounded","title":"Integrate external impound script"},{"location":"client/actions/vehicleImpounded/#event","text":"AddEventHandler ( \"jobs_creator:actions:vehicleImpounded\" , function ( vehiclePlate , vehicleModel ) end )","title":"Event"},{"location":"client/actions/vehicleImpounded/#parameters","text":"Name Data Type Description vehiclePlate string The vehicle plate vehicleModel string The vehicle model","title":"Parameters"},{"location":"client/actions/vehicleImpounded/#example","text":"RegisterNetEvent ( \"jobs_creator:actions:vehicleImpounded\" , function ( vehiclePlate , vehicleModel ) -- You can add your impound script exports here TriggerServerEvent ( \"impound_script:impoundVehicle\" , vehiclePlate , vehicleModel ) end )","title":"Example"},{"location":"client/armory/openArmory/","text":"Replace default armory Triggered when opening an armory Event AddEventHandler ( \"jobs_creator:armory:openArmory\" , function ( markerId ) end ) Parameters Name Data Type Description markerId int Marker ID Example (you can place it in the folder integrations/cl_integrations.lua of the script) RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script armory exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:armory:openArmory\" ) end ) -- Example to replace the script armory with an external one RegisterNetEvent ( \"jobs_creator:armory:openArmory\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_armory\" , title = 'Armory - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Replace default armory"},{"location":"client/armory/openArmory/#replace-default-armory","text":"Triggered when opening an armory","title":"Replace default armory"},{"location":"client/armory/openArmory/#event","text":"AddEventHandler ( \"jobs_creator:armory:openArmory\" , function ( markerId ) end )","title":"Event"},{"location":"client/armory/openArmory/#parameters","text":"Name Data Type Description markerId int Marker ID","title":"Parameters"},{"location":"client/armory/openArmory/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script armory exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:armory:openArmory\" ) end ) -- Example to replace the script armory with an external one RegisterNetEvent ( \"jobs_creator:armory:openArmory\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_armory\" , title = 'Armory - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/billing/createBilling/","text":"Replace default billing Triggered when using billing option in F6 actions menu Event RegisterNetEvent ( \"jobs_creator:actions:createBilling\" , function () end ) Example -- To place in jobs_creator/integrations/cl_integrations.lua RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script billing (otherwise there would be 2 billings) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:actions:createBilling\" ) end ) RegisterNetEvent ( \"jobs_creator:actions:createBilling\" , function () -- Uses Billing UI event TriggerEvent ( \"billing_ui:activateBillingMode\" ) end )","title":"Replace default billing"},{"location":"client/billing/createBilling/#replace-default-billing","text":"Triggered when using billing option in F6 actions menu","title":"Replace default billing"},{"location":"client/billing/createBilling/#event","text":"RegisterNetEvent ( \"jobs_creator:actions:createBilling\" , function () end )","title":"Event"},{"location":"client/billing/createBilling/#example","text":"-- To place in jobs_creator/integrations/cl_integrations.lua RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script billing (otherwise there would be 2 billings) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:actions:createBilling\" ) end ) RegisterNetEvent ( \"jobs_creator:actions:createBilling\" , function () -- Uses Billing UI event TriggerEvent ( \"billing_ui:activateBillingMode\" ) end )","title":"Example"},{"location":"client/buyable_vehicles/vehicleSpawned/","text":"Triggered after the spawn of a bought vehicle from buyable vehicles garage Event AddEventHandler ( \"jobs_creator:permanent_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end ) Parameters Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate Example AddEventHandler ( \"jobs_creator:permanent_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"vehicleSpawned"},{"location":"client/buyable_vehicles/vehicleSpawned/#event","text":"AddEventHandler ( \"jobs_creator:permanent_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end )","title":"Event"},{"location":"client/buyable_vehicles/vehicleSpawned/#parameters","text":"Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate","title":"Parameters"},{"location":"client/buyable_vehicles/vehicleSpawned/#example","text":"AddEventHandler ( \"jobs_creator:permanent_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"Example"},{"location":"client/duty/toggleCurrentDutyStatus/","text":"Trigger to toggle the current duty status of the player Event TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" ) This will toggle the current duty status of the player (if he was off duty he will be on duty and vice versa) Event - alternative TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , newDutyStatus ) This will set the duty status of the player to the new status Example -- Toggles the current duty status RegisterCommand ( \"duty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" ) end , false ) Example - alternative RegisterCommand ( \"onduty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , true ) end , false ) RegisterCommand ( \"offduty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , false ) end , false )","title":"toggleCurrentDutyStatus"},{"location":"client/duty/toggleCurrentDutyStatus/#event","text":"TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" ) This will toggle the current duty status of the player (if he was off duty he will be on duty and vice versa)","title":"Event"},{"location":"client/duty/toggleCurrentDutyStatus/#event-alternative","text":"TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , newDutyStatus ) This will set the duty status of the player to the new status","title":"Event - alternative"},{"location":"client/duty/toggleCurrentDutyStatus/#example","text":"-- Toggles the current duty status RegisterCommand ( \"duty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" ) end , false )","title":"Example"},{"location":"client/duty/toggleCurrentDutyStatus/#example-alternative","text":"RegisterCommand ( \"onduty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , true ) end , false ) RegisterCommand ( \"offduty\" , function () TriggerEvent ( \"jobs_creator:toggleCurrentDutyStatus\" , false ) end , false )","title":"Example - alternative"},{"location":"client/duty/toggleDuty/","text":"Triggered after player goes on/off duty client side Event AddEventHandler ( \"jobs_creator:toggleDuty\" , function ( isOnDuty ) end ) Parameters Name Data Type Description isOnDuty boolean Player new duty status Example AddEventHandler ( \"jobs_creator:toggleDuty\" , function ( isOnDuty ) if ( isOnDuty ) then ESX . ShowNotification ( \"You are now on duty\" ) else ESX . ShowNotification ( \"You are now off duty\" ) end end )","title":"toggleDuty"},{"location":"client/duty/toggleDuty/#event","text":"AddEventHandler ( \"jobs_creator:toggleDuty\" , function ( isOnDuty ) end )","title":"Event"},{"location":"client/duty/toggleDuty/#parameters","text":"Name Data Type Description isOnDuty boolean Player new duty status","title":"Parameters"},{"location":"client/duty/toggleDuty/#example","text":"AddEventHandler ( \"jobs_creator:toggleDuty\" , function ( isOnDuty ) if ( isOnDuty ) then ESX . ShowNotification ( \"You are now on duty\" ) else ESX . ShowNotification ( \"You are now off duty\" ) end end )","title":"Example"},{"location":"client/garage_owned/vehicleSpawned/","text":"Triggered after the spawn of a vehicle from owned vehicles garage Event AddEventHandler ( \"jobs_creator:garage_owned:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end ) Parameters Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate Example AddEventHandler ( \"jobs_creator:garage_owned:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"vehicleSpawned"},{"location":"client/garage_owned/vehicleSpawned/#event","text":"AddEventHandler ( \"jobs_creator:garage_owned:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end )","title":"Event"},{"location":"client/garage_owned/vehicleSpawned/#parameters","text":"Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate","title":"Parameters"},{"location":"client/garage_owned/vehicleSpawned/#example","text":"AddEventHandler ( \"jobs_creator:garage_owned:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"Example"},{"location":"client/notifications/notify/","text":"Replace default notifications Triggered after notifying player client side Event RegisterNetEvent ( \"jobs_creator:notify\" , function ( message , uncoloredMessage ) end ) Parameters Name Data Type Description message string Message of the notification uncoloredMessage string Message of the notification but without ~r~, ~g~, etc. Example (you can place it in the folder integrations/cl_integrations.lua of the script) RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script notification (otherwise there would be 2 notifications) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:notify\" ) end ) RegisterNetEvent ( \"jobs_creator:notify\" , function ( message , uncoloredMessage ) TriggerEvent ( \"external_script:notify\" , message ) end )","title":"Replace default notifications"},{"location":"client/notifications/notify/#replace-default-notifications","text":"Triggered after notifying player client side","title":"Replace default notifications"},{"location":"client/notifications/notify/#event","text":"RegisterNetEvent ( \"jobs_creator:notify\" , function ( message , uncoloredMessage ) end )","title":"Event"},{"location":"client/notifications/notify/#parameters","text":"Name Data Type Description message string Message of the notification uncoloredMessage string Message of the notification but without ~r~, ~g~, etc.","title":"Parameters"},{"location":"client/notifications/notify/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script notification (otherwise there would be 2 notifications) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:notify\" ) end ) RegisterNetEvent ( \"jobs_creator:notify\" , function ( message , uncoloredMessage ) TriggerEvent ( \"external_script:notify\" , message ) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/notifications/showHelpNotification/","text":"Replace default help notification Used to show the usual Press E to ... at the top left of the player's screen Export exports [ \"jobs_creator\" ]: replaceShowHelpNotification ( customFunction ) Parameters Name Data Type Description customFunction function A function that will replace the default ESX.ShowHelpNotification method. Requires the message parameter and will be called each frame Example (you can place it in the folder integrations/cl_integrations.lua of the script) local function myCustomHelpNotification ( message ) -- Customize your function to fit your needs print ( message ) ExternalScript . showHelpNotification ( message ) end RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- This will replace the base function with the one you want exports [ \"jobs_creator\" ]: replaceShowHelpNotification ( myCustomHelpNotification ) end )","title":"Replace default help notification"},{"location":"client/notifications/showHelpNotification/#replace-default-help-notification","text":"Used to show the usual Press E to ... at the top left of the player's screen","title":"Replace default help notification"},{"location":"client/notifications/showHelpNotification/#export","text":"exports [ \"jobs_creator\" ]: replaceShowHelpNotification ( customFunction )","title":"Export"},{"location":"client/notifications/showHelpNotification/#parameters","text":"Name Data Type Description customFunction function A function that will replace the default ESX.ShowHelpNotification method. Requires the message parameter and will be called each frame","title":"Parameters"},{"location":"client/notifications/showHelpNotification/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"local function myCustomHelpNotification ( message ) -- Customize your function to fit your needs print ( message ) ExternalScript . showHelpNotification ( message ) end RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- This will replace the base function with the one you want exports [ \"jobs_creator\" ]: replaceShowHelpNotification ( myCustomHelpNotification ) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/progress_bar/internalProgressBar/","text":"Replace/Disable default progress bar Triggered when using progress bar Event RegisterNetEvent ( \"jobs_creator:internalProgressBar\" , function ( time , text ) end ) Parameters Name Data Type Description time int Progress bar duration in seconds text string Description text Example -- In jobs_creator/integrations/cl_integrations.lua RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script progress bar (otherwise there would be 2 progress bars) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:internalProgressBar\" ) end ) -- Example to replace the script progress bar with an external one RegisterNetEvent ( \"jobs_creator:internalProgressBar\" , function ( time , text ) -- The event to activate your external progress bar TriggerEvent ( \"external_progressbar:start\" , time , text ) end )","title":"Replace/Disable default progress bar"},{"location":"client/progress_bar/internalProgressBar/#replacedisable-default-progress-bar","text":"Triggered when using progress bar","title":"Replace/Disable default progress bar"},{"location":"client/progress_bar/internalProgressBar/#event","text":"RegisterNetEvent ( \"jobs_creator:internalProgressBar\" , function ( time , text ) end )","title":"Event"},{"location":"client/progress_bar/internalProgressBar/#parameters","text":"Name Data Type Description time int Progress bar duration in seconds text string Description text","title":"Parameters"},{"location":"client/progress_bar/internalProgressBar/#example","text":"-- In jobs_creator/integrations/cl_integrations.lua RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script progress bar (otherwise there would be 2 progress bars) exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:internalProgressBar\" ) end ) -- Example to replace the script progress bar with an external one RegisterNetEvent ( \"jobs_creator:internalProgressBar\" , function ( time , text ) -- The event to activate your external progress bar TriggerEvent ( \"external_progressbar:start\" , time , text ) end )","title":"Example"},{"location":"client/safe/openSafe/","text":"Replace default safe Triggered when opening a safe Event RegisterNetEvent ( \"jobs_creator:safe:openSafe\" , function ( markerId ) end ) Parameters Name Data Type Description markerId int Marker ID Example (you can place it in the folder integrations/cl_integrations.lua of the script) RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script safe exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:safe:openSafe\" ) end ) -- Example to replace the script safe with an external one RegisterNetEvent ( \"jobs_creator:safe:openSafe\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_safe\" , title = 'Safe - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Replace default safe"},{"location":"client/safe/openSafe/#replace-default-safe","text":"Triggered when opening a safe","title":"Replace default safe"},{"location":"client/safe/openSafe/#event","text":"RegisterNetEvent ( \"jobs_creator:safe:openSafe\" , function ( markerId ) end )","title":"Event"},{"location":"client/safe/openSafe/#parameters","text":"Name Data Type Description markerId int Marker ID","title":"Parameters"},{"location":"client/safe/openSafe/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script safe exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:safe:openSafe\" ) end ) -- Example to replace the script safe with an external one RegisterNetEvent ( \"jobs_creator:safe:openSafe\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_safe\" , title = 'Safe - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/stash/openStash/","text":"Replace default stash Triggered when opening a stash Event RegisterNetEvent ( \"jobs_creator:stash:openStash\" , function ( markerId ) end ) Parameters Name Data Type Description markerId int Marker ID Example (you can place it in the folder integrations/cl_integrations.lua of the script) RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script stash exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:stash:openStash\" ) end ) -- Example to replace the script stash with an external one RegisterNetEvent ( \"jobs_creator:stash:openStash\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_stash\" , title = 'Stash - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Replace default stash"},{"location":"client/stash/openStash/#replace-default-stash","text":"Triggered when opening a stash","title":"Replace default stash"},{"location":"client/stash/openStash/#event","text":"RegisterNetEvent ( \"jobs_creator:stash:openStash\" , function ( markerId ) end )","title":"Event"},{"location":"client/stash/openStash/#parameters","text":"Name Data Type Description markerId int Marker ID","title":"Parameters"},{"location":"client/stash/openStash/#example-you-can-place-it-in-the-folder-integrationscl_integrationslua-of-the-script","text":"RegisterNetEvent ( \"jobs_creator:framework:ready\" , function () -- Disables the default script stash exports [ \"jobs_creator\" ]: disableScriptEvent ( \"jobs_creator:stash:openStash\" ) end ) -- Example to replace the script stash with an external one RegisterNetEvent ( \"jobs_creator:stash:openStash\" , function ( markerId ) -- Example with Chezza's inventory TriggerEvent ( 'inventory:open' , { id = \"marker_\" .. markerId , type = \"esx_job_creator_stash\" , title = 'Stash - ' .. markerId , weight = 1000 , save = true , timeout = 1000 }) end )","title":"Example (you can place it in the folder integrations/cl_integrations.lua of the script)"},{"location":"client/temporary_garage/vehicleSpawned/","text":"Triggered after the spawn of a temporary vehicle Event AddEventHandler ( \"jobs_creator:temporary_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end ) Parameters Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate Example AddEventHandler ( \"jobs_creator:temporary_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"vehicleSpawned"},{"location":"client/temporary_garage/vehicleSpawned/#event","text":"AddEventHandler ( \"jobs_creator:temporary_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) end )","title":"Event"},{"location":"client/temporary_garage/vehicleSpawned/#parameters","text":"Name Data Type Description vehicle vehicle handle The vehicle's handle vehicleName string The vehicle's name vehiclePlate string Vehicle's plate","title":"Parameters"},{"location":"client/temporary_garage/vehicleSpawned/#example","text":"AddEventHandler ( \"jobs_creator:temporary_garage:vehicleSpawned\" , function ( vehicle , vehicleName , vehiclePlate ) -- Example to give keys to the vehicle (you may have a TriggerEvent to use, that's up to you) giveKeysToVehicle ( vehicle ) print ( vehicleName ) -- Example output 'adder' end )","title":"Example"},{"location":"server/armory/addWeaponToArmory/","text":"To add a weapon in a marker ID for a specific player Export exports [ \"jobs_creator\" ]: addWeaponToArmory ( markerId , playerIdentifier , weaponName , weaponAmmo , weaponComponents , weaponTintIndex ) Parameters Name Data Type Description markerId integer The marker ID playerIdentifier string Player identifier weaponName string Weapon name weaponAmmo integer Ammo count weaponComponents table Table of weapon components weaponTintIndex integer Weapon tint index Return value Name Data Type Description isSuccessful boolean If the weapon is added or not Example local success = exports [ \"jobs_creator\" ]: addWeaponToArmory ( 3 , \"2570e6efd3671584d7ed05a45cbf4156f782wwac\" , \"WEAPON_PISTOL\" , 5 {}, 1 ) print ( success )","title":"addWeaponToArmory"},{"location":"server/armory/addWeaponToArmory/#export","text":"exports [ \"jobs_creator\" ]: addWeaponToArmory ( markerId , playerIdentifier , weaponName , weaponAmmo , weaponComponents , weaponTintIndex )","title":"Export"},{"location":"server/armory/addWeaponToArmory/#parameters","text":"Name Data Type Description markerId integer The marker ID playerIdentifier string Player identifier weaponName string Weapon name weaponAmmo integer Ammo count weaponComponents table Table of weapon components weaponTintIndex integer Weapon tint index","title":"Parameters"},{"location":"server/armory/addWeaponToArmory/#return-value","text":"Name Data Type Description isSuccessful boolean If the weapon is added or not","title":"Return value"},{"location":"server/armory/addWeaponToArmory/#example","text":"local success = exports [ \"jobs_creator\" ]: addWeaponToArmory ( 3 , \"2570e6efd3671584d7ed05a45cbf4156f782wwac\" , \"WEAPON_PISTOL\" , 5 {}, 1 ) print ( success )","title":"Example"},{"location":"server/armory/getAllArmoryWeapons/","text":"To get a list of all weapons stored in a specific armory ID. Export exports [ \"jobs_creator\" ]: getAllArmoryWeapons ( markerId ) Parameters Name Data Type Description markerId integer The marker ID Return value Name Data Type Description armoryWeapons table List of all weapons contained in the marker Example local allWeapons = getAllArmoryWeapons ( markerId ) print ( \"All players weapons in that armory\" ) print ( ESX . DumpTable ( allWeapons ))","title":"getAllArmoryWeapons"},{"location":"server/armory/getAllArmoryWeapons/#export","text":"exports [ \"jobs_creator\" ]: getAllArmoryWeapons ( markerId )","title":"Export"},{"location":"server/armory/getAllArmoryWeapons/#parameters","text":"Name Data Type Description markerId integer The marker ID","title":"Parameters"},{"location":"server/armory/getAllArmoryWeapons/#return-value","text":"Name Data Type Description armoryWeapons table List of all weapons contained in the marker","title":"Return value"},{"location":"server/armory/getAllArmoryWeapons/#example","text":"local allWeapons = getAllArmoryWeapons ( markerId ) print ( \"All players weapons in that armory\" ) print ( ESX . DumpTable ( allWeapons ))","title":"Example"},{"location":"server/armory/getPlayerArmoryWeapons/","text":"To get a list of weapons of a player stored in a specific armory ID. Export exports [ \"jobs_creator\" ]: getPlayerArmoryWeapons ( playerId , markerId ) Parameters Name Data Type Description playerId integer Player server ID markerId integer The marker ID Return value Name Data Type Description playerArmoryWeapons table List of all weapons contained in the marker deposited by the player Example local playerId = 20 local markerId = 52 local playerArmoryWeapons = getPlayerArmoryWeapons ( playerId , markerId ) print ( \"Player weapons in that armory\" ) print ( ESX . DumpTable ( playerArmoryWeapons ))","title":"getPlayerArmoryWeapons"},{"location":"server/armory/getPlayerArmoryWeapons/#export","text":"exports [ \"jobs_creator\" ]: getPlayerArmoryWeapons ( playerId , markerId )","title":"Export"},{"location":"server/armory/getPlayerArmoryWeapons/#parameters","text":"Name Data Type Description playerId integer Player server ID markerId integer The marker ID","title":"Parameters"},{"location":"server/armory/getPlayerArmoryWeapons/#return-value","text":"Name Data Type Description playerArmoryWeapons table List of all weapons contained in the marker deposited by the player","title":"Return value"},{"location":"server/armory/getPlayerArmoryWeapons/#example","text":"local playerId = 20 local markerId = 52 local playerArmoryWeapons = getPlayerArmoryWeapons ( playerId , markerId ) print ( \"Player weapons in that armory\" ) print ( ESX . DumpTable ( playerArmoryWeapons ))","title":"Example"},{"location":"server/armory/removeWeaponFromArmory/","text":"To add a weapon in a marker ID for a specific player Export exports [ \"jobs_creator\" ]: removeWeaponFromArmory ( markerId , weaponId ) Parameters Name Data Type Description markerId integer The marker ID weaponId integer Weapon ID in the database, can be seen in exports[\"jobs_creator\"]:getAllArmoryWeapons(markerId) Return value Name Data Type Description isSuccessful boolean If the weapon is removed or not Example local markerId = 15 local weaponId = 356 local success = exports [ \"jobs_creator\" ]: removeWeaponFromArmory ( markerId , weaponId ) print ( success )","title":"removeWeaponFromArmory"},{"location":"server/armory/removeWeaponFromArmory/#export","text":"exports [ \"jobs_creator\" ]: removeWeaponFromArmory ( markerId , weaponId )","title":"Export"},{"location":"server/armory/removeWeaponFromArmory/#parameters","text":"Name Data Type Description markerId integer The marker ID weaponId integer Weapon ID in the database, can be seen in exports[\"jobs_creator\"]:getAllArmoryWeapons(markerId)","title":"Parameters"},{"location":"server/armory/removeWeaponFromArmory/#return-value","text":"Name Data Type Description isSuccessful boolean If the weapon is removed or not","title":"Return value"},{"location":"server/armory/removeWeaponFromArmory/#example","text":"local markerId = 15 local weaponId = 356 local success = exports [ \"jobs_creator\" ]: removeWeaponFromArmory ( markerId , weaponId ) print ( success )","title":"Example"},{"location":"server/boss/addSocietyMoney/","text":"To add money to a society Export exports [ \"jobs_creator\" ]: addSocietyMoney ( jobName , amount ) Parameters Name Data Type Description jobName string Job ID (example police) amount integer Amount of money to add Return value Name Data Type Description isSuccessful boolean If money are added or not Example local isSuccessful = exports [ \"jobs_creator\" ]: addSocietyMoney ( \"police\" , 5000 ) print ( isSuccessful )","title":"addSocietyMoney"},{"location":"server/boss/addSocietyMoney/#export","text":"exports [ \"jobs_creator\" ]: addSocietyMoney ( jobName , amount )","title":"Export"},{"location":"server/boss/addSocietyMoney/#parameters","text":"Name Data Type Description jobName string Job ID (example police) amount integer Amount of money to add","title":"Parameters"},{"location":"server/boss/addSocietyMoney/#return-value","text":"Name Data Type Description isSuccessful boolean If money are added or not","title":"Return value"},{"location":"server/boss/addSocietyMoney/#example","text":"local isSuccessful = exports [ \"jobs_creator\" ]: addSocietyMoney ( \"police\" , 5000 ) print ( isSuccessful )","title":"Example"},{"location":"server/boss/getJobAccountMoney/","text":"To get a list of weapons of a player stored in a specific armory ID. Export exports [ \"jobs_creator\" ]: getJobAccountMoney ( jobName ) Parameters Name Data Type Description jobName string Job ID (example police) Return value Name Data Type Description accountMoney integer Money stored in society account Example local jobMoney = exports [ \"jobs_creator\" ]: getJobAccountMoney ( \"gang_job\" ) print ( jobMoney )","title":"getJobAccountMoney"},{"location":"server/boss/getJobAccountMoney/#export","text":"exports [ \"jobs_creator\" ]: getJobAccountMoney ( jobName )","title":"Export"},{"location":"server/boss/getJobAccountMoney/#parameters","text":"Name Data Type Description jobName string Job ID (example police)","title":"Parameters"},{"location":"server/boss/getJobAccountMoney/#return-value","text":"Name Data Type Description accountMoney integer Money stored in society account","title":"Return value"},{"location":"server/boss/getJobAccountMoney/#example","text":"local jobMoney = exports [ \"jobs_creator\" ]: getJobAccountMoney ( \"gang_job\" ) print ( jobMoney )","title":"Example"},{"location":"server/boss/removeSocietyMoney/","text":"To remove money from a society Export exports [ \"jobs_creator\" ]: removeSocietyMoney ( jobName , amount ) Parameters Name Data Type Description jobName string Job ID (example police) amount integer Amount of money to remove Return value Name Data Type Description isSuccessful boolean If money are removed or not Example local isSuccessful = exports [ \"jobs_creator\" ]: removeSocietyMoney ( \"police\" , 5000 ) print ( isSuccessful )","title":"removeSocietyMoney"},{"location":"server/boss/removeSocietyMoney/#export","text":"exports [ \"jobs_creator\" ]: removeSocietyMoney ( jobName , amount )","title":"Export"},{"location":"server/boss/removeSocietyMoney/#parameters","text":"Name Data Type Description jobName string Job ID (example police) amount integer Amount of money to remove","title":"Parameters"},{"location":"server/boss/removeSocietyMoney/#return-value","text":"Name Data Type Description isSuccessful boolean If money are removed or not","title":"Return value"},{"location":"server/boss/removeSocietyMoney/#example","text":"local isSuccessful = exports [ \"jobs_creator\" ]: removeSocietyMoney ( \"police\" , 5000 ) print ( isSuccessful )","title":"Example"},{"location":"server/buyable_vehicles/getAllVehiclesOfPlayer/","text":"To get all vehicles owned by a player ID in all buyable garages Export exports [ \"jobs_creator\" ]: getAllVehiclesOfPlayer ( playerId ) Parameters Name Data Type Description playerId integer Player's server ID Return value Name Data Type Description vehicles table Table with all vehicles owned by the player in the buyable garages, key is vehicle ID and value is the vehicle data Example local playerId = 4 local vehicles = exports [ \"jobs_creator\" ]: getAllVehiclesOfPlayer ( playerId ) print ( \"Player vehicles:\" ) print ( ESX . DumpTable ( vehicles ))","title":"getAllVehiclesOfPlayer"},{"location":"server/buyable_vehicles/getAllVehiclesOfPlayer/#export","text":"exports [ \"jobs_creator\" ]: getAllVehiclesOfPlayer ( playerId )","title":"Export"},{"location":"server/buyable_vehicles/getAllVehiclesOfPlayer/#parameters","text":"Name Data Type Description playerId integer Player's server ID","title":"Parameters"},{"location":"server/buyable_vehicles/getAllVehiclesOfPlayer/#return-value","text":"Name Data Type Description vehicles table Table with all vehicles owned by the player in the buyable garages, key is vehicle ID and value is the vehicle data","title":"Return value"},{"location":"server/buyable_vehicles/getAllVehiclesOfPlayer/#example","text":"local playerId = 4 local vehicles = exports [ \"jobs_creator\" ]: getAllVehiclesOfPlayer ( playerId ) print ( \"Player vehicles:\" ) print ( ESX . DumpTable ( vehicles ))","title":"Example"},{"location":"server/buyable_vehicles/getPlayerVehiclesInMarkerId/","text":"To get all vehicles owned by a player ID in a specific buyable garage marker ID Export exports [ \"jobs_creator\" ]: getPlayerVehiclesInMarkerId ( playerId , markerId ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID Return value Name Data Type Description vehicles table Table with all vehicles owned by the player in the garage, key is vehicle ID and value is the vehicle data Example local playerId = 1 local markerId = 252 local playerVehiclesInMarker = exports [ \"jobs_creator\" ]: getPlayerVehiclesInMarkerId ( playerId , markerId ) print ( ESX . DumpTable ( playerVehiclesInMarker ))","title":"getPlayerVehiclesInMarkerId"},{"location":"server/buyable_vehicles/getPlayerVehiclesInMarkerId/#export","text":"exports [ \"jobs_creator\" ]: getPlayerVehiclesInMarkerId ( playerId , markerId )","title":"Export"},{"location":"server/buyable_vehicles/getPlayerVehiclesInMarkerId/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID","title":"Parameters"},{"location":"server/buyable_vehicles/getPlayerVehiclesInMarkerId/#return-value","text":"Name Data Type Description vehicles table Table with all vehicles owned by the player in the garage, key is vehicle ID and value is the vehicle data","title":"Return value"},{"location":"server/buyable_vehicles/getPlayerVehiclesInMarkerId/#example","text":"local playerId = 1 local markerId = 252 local playerVehiclesInMarker = exports [ \"jobs_creator\" ]: getPlayerVehiclesInMarkerId ( playerId , markerId ) print ( ESX . DumpTable ( playerVehiclesInMarker ))","title":"Example"},{"location":"server/buyable_vehicles/isPlayerOwnerOfVehiclePlate/","text":"Returns if a player ID is the owner of a specific plate Export exports [ \"jobs_creator\" ]: isPlayerOwnerOfVehiclePlate ( playerId , plate ) Parameters Name Data Type Description playerId integer Player's server ID plate string Vehicle's plate Return value Name Data Type Description isOwner bool If the player is the vehicle owner or not Example local playerId = 1 local plate = \"40PQB261\" local isTheVehicleOwner = exports [ \"jobs_creator\" ]: isPlayerOwnerOfVehiclePlate ( playerId , plate ) print ( \"Is the player owner of that plate: \" .. tostring ( isTheVehicleOwner ))","title":"isPlayerOwnerOfVehiclePlate"},{"location":"server/buyable_vehicles/isPlayerOwnerOfVehiclePlate/#export","text":"exports [ \"jobs_creator\" ]: isPlayerOwnerOfVehiclePlate ( playerId , plate )","title":"Export"},{"location":"server/buyable_vehicles/isPlayerOwnerOfVehiclePlate/#parameters","text":"Name Data Type Description playerId integer Player's server ID plate string Vehicle's plate","title":"Parameters"},{"location":"server/buyable_vehicles/isPlayerOwnerOfVehiclePlate/#return-value","text":"Name Data Type Description isOwner bool If the player is the vehicle owner or not","title":"Return value"},{"location":"server/buyable_vehicles/isPlayerOwnerOfVehiclePlate/#example","text":"local playerId = 1 local plate = \"40PQB261\" local isTheVehicleOwner = exports [ \"jobs_creator\" ]: isPlayerOwnerOfVehiclePlate ( playerId , plate ) print ( \"Is the player owner of that plate: \" .. tostring ( isTheVehicleOwner ))","title":"Example"},{"location":"server/buyable_vehicles/vehicleBought/","text":"Triggered when a player buys a vehicle from buyable garage marker Event RegisterNetEvent ( \"jobs_creator:permanent_garage:vehicleBought\" , function ( playerId , markerId , vehicleName , vehicleId ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID vehicleName string Vehicle model name vehicleId integer Vehicle id in the database Example RegisterNetEvent ( \"jobs_creator:permanent_garage:vehicleBought\" , function ( playerId , markerId , vehicleName , vehicleId ) print ( \"Player ID :\" .. playerId .. \" bought a \" .. vehicleName .. \" with ID \" .. vehicleId .. \" from marker \" .. markerId ) end )","title":"vehicleBought"},{"location":"server/buyable_vehicles/vehicleBought/#event","text":"RegisterNetEvent ( \"jobs_creator:permanent_garage:vehicleBought\" , function ( playerId , markerId , vehicleName , vehicleId ) end )","title":"Event"},{"location":"server/buyable_vehicles/vehicleBought/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID vehicleName string Vehicle model name vehicleId integer Vehicle id in the database","title":"Parameters"},{"location":"server/buyable_vehicles/vehicleBought/#example","text":"RegisterNetEvent ( \"jobs_creator:permanent_garage:vehicleBought\" , function ( playerId , markerId , vehicleName , vehicleId ) print ( \"Player ID :\" .. playerId .. \" bought a \" .. vehicleName .. \" with ID \" .. vehicleId .. \" from marker \" .. markerId ) end )","title":"Example"},{"location":"server/crafting_table/craftedItem/","text":"Triggered when a player crafts an item in crafting table marker Event RegisterNetEvent ( \"jobs_creator:crafting_table:craftedItem\" , function ( playerId , markerId , itemName , itemQuantity ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName integer Crafted item name itemQuantity integer Crafted item quantity Example RegisterNetEvent ( \"jobs_creator:crafting_table:craftedItem\" , function ( playerId , markerId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"craft\" ) end )","title":"craftedItem"},{"location":"server/crafting_table/craftedItem/#event","text":"RegisterNetEvent ( \"jobs_creator:crafting_table:craftedItem\" , function ( playerId , markerId , itemName , itemQuantity ) end )","title":"Event"},{"location":"server/crafting_table/craftedItem/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName integer Crafted item name itemQuantity integer Crafted item quantity","title":"Parameters"},{"location":"server/crafting_table/craftedItem/#example","text":"RegisterNetEvent ( \"jobs_creator:crafting_table:craftedItem\" , function ( playerId , markerId , itemName , itemQuantity ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"craft\" ) end )","title":"Example"},{"location":"server/duty/isPlayerOnDuty/","text":"Returns if the player is on duty or not. Event exports [ \"jobs_creator\" ]: isPlayerOnDuty ( playerId ) Parameters Name Data Type Description playerId integer Target player server ID Return Name Data Type Description isOnDuty boolean true if the player is on-duty false if the player is off-duty Example local playerId = 52 print ( \"Player ID \" .. playerId .. \" is on duty: \" .. tostring ( exports [ \"jobs_creator\" ]: isPlayerOnDuty ( playerId ) ))","title":"isPlayerOnDuty"},{"location":"server/duty/isPlayerOnDuty/#event","text":"exports [ \"jobs_creator\" ]: isPlayerOnDuty ( playerId )","title":"Event"},{"location":"server/duty/isPlayerOnDuty/#parameters","text":"Name Data Type Description playerId integer Target player server ID","title":"Parameters"},{"location":"server/duty/isPlayerOnDuty/#return","text":"Name Data Type Description isOnDuty boolean true if the player is on-duty false if the player is off-duty","title":"Return"},{"location":"server/duty/isPlayerOnDuty/#example","text":"local playerId = 52 print ( \"Player ID \" .. playerId .. \" is on duty: \" .. tostring ( exports [ \"jobs_creator\" ]: isPlayerOnDuty ( playerId ) ))","title":"Example"},{"location":"server/duty/toggleDuty/","text":"Triggered after player goes on/off duty server side Event RegisterNetEvent ( \"jobs_creator:toggleDuty\" , function ( playerId , jobName , isOnDuty ) end ) Parameters Name Data Type Description playerId integer Target player server ID jobName string Player's job id isOnDuty boolean Player new duty status Example RegisterNetEvent ( \"jobs_creator:toggleDuty\" , function ( playerId , jobName , isOnDuty ) if ( isOnDuty ) then TriggerEvent ( \"external_scoreboard:increaseOnDutyCount\" , jobName ) else TriggerEvent ( \"external_scoreboard:decreaseOnDutyCount\" , jobName ) end end )","title":"toggleDuty"},{"location":"server/duty/toggleDuty/#event","text":"RegisterNetEvent ( \"jobs_creator:toggleDuty\" , function ( playerId , jobName , isOnDuty ) end )","title":"Event"},{"location":"server/duty/toggleDuty/#parameters","text":"Name Data Type Description playerId integer Target player server ID jobName string Player's job id isOnDuty boolean Player new duty status","title":"Parameters"},{"location":"server/duty/toggleDuty/#example","text":"RegisterNetEvent ( \"jobs_creator:toggleDuty\" , function ( playerId , jobName , isOnDuty ) if ( isOnDuty ) then TriggerEvent ( \"external_scoreboard:increaseOnDutyCount\" , jobName ) else TriggerEvent ( \"external_scoreboard:decreaseOnDutyCount\" , jobName ) end end )","title":"Example"},{"location":"server/harvest/harvestedItem/","text":"Triggered when a player harvests an item in harvest marker Event RegisterNetEvent ( \"jobs_creator:harvest:harvestedItem\" , function ( playerId , markerId , itemName , itemQuantity ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name itemQuantity integer Harvested quantity Example RegisterNetEvent ( \"jobs_creator:harvest:harvestedItem\" , function ( playerId , markerId , itemName , itemQuantity ) print ( \"Player ID :\" .. playerId .. \" harvested \" .. itemQuantity .. \" \" .. itemName .. \" from marker \" .. markerId ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"harvest\" ) end )","title":"harvestedItem"},{"location":"server/harvest/harvestedItem/#event","text":"RegisterNetEvent ( \"jobs_creator:harvest:harvestedItem\" , function ( playerId , markerId , itemName , itemQuantity ) end )","title":"Event"},{"location":"server/harvest/harvestedItem/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name itemQuantity integer Harvested quantity","title":"Parameters"},{"location":"server/harvest/harvestedItem/#example","text":"RegisterNetEvent ( \"jobs_creator:harvest:harvestedItem\" , function ( playerId , markerId , itemName , itemQuantity ) print ( \"Player ID :\" .. playerId .. \" harvested \" .. itemQuantity .. \" \" .. itemName .. \" from marker \" .. markerId ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"harvest\" ) end )","title":"Example"},{"location":"server/market/soldItem/","text":"Triggered when a player buys an item/weapon in shop marker Event RegisterNetEvent ( \"jobs_creator:market:soldItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name or weapon name itemQuantity integer Bought quantity totalPrice integer Total received money Example RegisterNetEvent ( \"jobs_creator:market:soldItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) print ( \"Player ID :\" .. playerId .. \" sold x\" .. itemQuantity .. \" \" .. itemName .. \" from shop \" .. markerId ) end )","title":"soldItem"},{"location":"server/market/soldItem/#event","text":"RegisterNetEvent ( \"jobs_creator:market:soldItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) end )","title":"Event"},{"location":"server/market/soldItem/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name or weapon name itemQuantity integer Bought quantity totalPrice integer Total received money","title":"Parameters"},{"location":"server/market/soldItem/#example","text":"RegisterNetEvent ( \"jobs_creator:market:soldItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) print ( \"Player ID :\" .. playerId .. \" sold x\" .. itemQuantity .. \" \" .. itemName .. \" from shop \" .. markerId ) end )","title":"Example"},{"location":"server/process/processedItem/","text":"Triggered when a player processes an item in process marker Event RegisterNetEvent ( \"jobs_creator:process:processedItem\" , function ( playerId , markerId , addedItemName , addedItemQuantity , removedItemName , removedItemQuantity ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID addedItemName string Received item name addedItemQuantity integer Received item quantity removedItemName integer Removed item name removedItemQuantity integer Removed item quantity Example RegisterNetEvent ( \"jobs_creator:process:processedItem\" , function ( playerId , markerId , addedItemName , addedItemQuantity , removedItemName , removedItemQuantity ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"process\" ) end )","title":"processedItem"},{"location":"server/process/processedItem/#event","text":"RegisterNetEvent ( \"jobs_creator:process:processedItem\" , function ( playerId , markerId , addedItemName , addedItemQuantity , removedItemName , removedItemQuantity ) end )","title":"Event"},{"location":"server/process/processedItem/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID addedItemName string Received item name addedItemQuantity integer Received item quantity removedItemName integer Removed item name removedItemQuantity integer Removed item quantity","title":"Parameters"},{"location":"server/process/processedItem/#example","text":"RegisterNetEvent ( \"jobs_creator:process:processedItem\" , function ( playerId , markerId , addedItemName , addedItemQuantity , removedItemName , removedItemQuantity ) TriggerEvent ( \"xp_system:addExperience\" , playerId , \"process\" ) end )","title":"Example"},{"location":"server/shop/boughtItem/","text":"Triggered when a player buys an item/weapon in shop marker Event RegisterNetEvent ( \"jobs_creator:shop:boughtItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) end ) Parameters Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name or weapon name itemQuantity integer Bought quantity totalPrice integer Total paid price Example RegisterNetEvent ( \"jobs_creator:shop:boughtItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) print ( \"Player ID :\" .. playerId .. \" bought x\" .. itemQuantity .. \" \" .. itemName .. \" from shop \" .. markerId ) end )","title":"boughtItem"},{"location":"server/shop/boughtItem/#event","text":"RegisterNetEvent ( \"jobs_creator:shop:boughtItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) end )","title":"Event"},{"location":"server/shop/boughtItem/#parameters","text":"Name Data Type Description playerId integer Player's server ID markerId integer Marker ID itemName string Item name or weapon name itemQuantity integer Bought quantity totalPrice integer Total paid price","title":"Parameters"},{"location":"server/shop/boughtItem/#example","text":"RegisterNetEvent ( \"jobs_creator:shop:boughtItem\" , function ( playerId , markerId , itemName , itemQuantity , totalPrice ) print ( \"Player ID :\" .. playerId .. \" bought x\" .. itemQuantity .. \" \" .. itemName .. \" from shop \" .. markerId ) end )","title":"Example"}]}